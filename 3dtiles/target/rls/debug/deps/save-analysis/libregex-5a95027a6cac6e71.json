{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55],"program":"C:\\Users\\yuanyi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","regex","C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=5a95027a6cac6e71","-C","extra-filename=-5a95027a6cac6e71","--out-dir","d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps","-L","dependency=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps","--extern","aho_corasick=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps\\libaho_corasick-fbad4542361e12ed.rmeta","--extern","memchr=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps\\libmemchr-b86dc1f55e22c147.rmeta","--extern","regex_syntax=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps\\libregex_syntax-13a2662ab2ba41de.rmeta","--extern","thread_local=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps\\libthread_local-50e2c62df3d9c033.rmeta","--extern","utf8_ranges=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps\\libutf8_ranges-0516445a9ccf7eb3.rmeta","--cap-lints","allow","--cfg","regex_runtime_teddy_ssse3","--cfg","regex_runtime_teddy_avx2","--error-format=json","--sysroot","C:\\Users\\yuanyi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[100,58,92,112,114,111,103,114,97,109,109,105,110,103,92,68,97,116,97,68,97,115,92,51,100,116,105,108,101,115,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,114,101,103,101,120,45,53,97,57,53,48,50,55,97,54,99,97,99,54,101,55,49,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"regex","disambiguator":[11384552570835793628,5026208278997272417]},"crate_root":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src","external_crates":[{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[6497413695257409113,8363414768885484514]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[18058147969333450893,13268649681863949094]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11952756852394341397,15947907305756316424]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3630013859029208871,3806232699279168156]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12834222563671543008,8524540247763871862]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[18371008013690111012,4867424062236140066]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[438167776779553502,12488629561743155773]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[1419137526044370392,14298439468463405642]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[8847763227328938631,1920228220721921728]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":10,"id":{"name":"aho_corasick","disambiguator":[2276283959689646588,52611487394466398]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":11,"id":{"name":"memchr","disambiguator":[8297100141227803214,7124740160995763767]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":12,"id":{"name":"thread_local","disambiguator":[6034898928950802966,7972436801908591139]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":13,"id":{"name":"lazy_static","disambiguator":[5967563819133095730,7606973710832407296]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":14,"id":{"name":"regex_syntax","disambiguator":[8527852448333314112,3067740800976814247]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":15,"id":{"name":"ucd_util","disambiguator":[4117050762809250943,15457956479418145787]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","num":16,"id":{"name":"utf8_ranges","disambiguator":[18162778655411255582,13377173151313478348]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":23567,"line_start":11,"line_end":689,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2444},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18767,"byte_end":18772,"line_start":543,"line_end":543,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18831,"byte_end":18832,"line_start":545,"line_end":545,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18895,"byte_end":18896,"line_start":547,"line_end":547,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18951,"byte_end":18952,"line_start":549,"line_end":549,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3372},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19036,"byte_end":19041,"line_start":553,"line_end":553,"column_start":5,"column_end":10},"alias_span":null,"name":"Regex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19043,"byte_end":19048,"line_start":553,"line_end":553,"column_start":12,"column_end":17},"alias_span":null,"name":"Match","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1926},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19050,"byte_end":19058,"line_start":553,"line_end":553,"column_start":19,"column_end":27},"alias_span":null,"name":"Captures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1890},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19064,"byte_end":19076,"line_start":554,"line_end":554,"column_start":5,"column_end":17},"alias_span":null,"name":"CaptureNames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1978},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19078,"byte_end":19085,"line_start":554,"line_end":554,"column_start":19,"column_end":26},"alias_span":null,"name":"Matches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1970},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19087,"byte_end":19101,"line_start":554,"line_end":554,"column_start":28,"column_end":42},"alias_span":null,"name":"CaptureMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1962},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19103,"byte_end":19120,"line_start":554,"line_end":554,"column_start":44,"column_end":61},"alias_span":null,"name":"SubCaptureMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19126,"byte_end":19142,"line_start":555,"line_end":555,"column_start":5,"column_end":21},"alias_span":null,"name":"CaptureLocations","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1916},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19144,"byte_end":19153,"line_start":555,"line_end":555,"column_start":23,"column_end":32},"alias_span":null,"name":"Locations","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1986},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19159,"byte_end":19167,"line_start":556,"line_end":556,"column_start":5,"column_end":13},"alias_span":null,"name":"Replacer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3388},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19169,"byte_end":19180,"line_start":556,"line_end":556,"column_start":15,"column_end":26},"alias_span":null,"name":"ReplacerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2010},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19182,"byte_end":19190,"line_start":556,"line_end":556,"column_start":28,"column_end":36},"alias_span":null,"name":"NoExpand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1900},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19192,"byte_end":19197,"line_start":556,"line_end":556,"column_start":38,"column_end":43},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1908},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19199,"byte_end":19205,"line_start":556,"line_end":556,"column_start":45,"column_end":51},"alias_span":null,"name":"SplitN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1804},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":19211,"byte_end":19217,"line_start":557,"line_end":557,"column_start":5,"column_end":11},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22683,"byte_end":22684,"line_start":649,"line_end":649,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":56}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22721,"byte_end":22722,"line_start":650,"line_end":650,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":56}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22746,"byte_end":22747,"line_start":651,"line_end":651,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":56}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22776,"byte_end":22777,"line_start":652,"line_end":652,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":56}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23367,"byte_end":23375,"line_start":684,"line_end":684,"column_start":22,"column_end":30},"alias_span":null,"name":"Compiler","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":630},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23396,"byte_end":23400,"line_start":685,"line_end":685,"column_start":20,"column_end":24},"alias_span":null,"name":"Exec","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":634},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23402,"byte_end":23413,"line_start":685,"line_end":685,"column_start":26,"column_end":37},"alias_span":null,"name":"ExecBuilder","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23436,"byte_end":23440,"line_start":686,"line_end":686,"column_start":21,"column_end":25},"alias_span":null,"name":"Char","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":872},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23442,"byte_end":23447,"line_start":686,"line_end":686,"column_start":27,"column_end":32},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2566},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23449,"byte_end":23458,"line_start":686,"line_end":686,"column_start":34,"column_end":43},"alias_span":null,"name":"CharInput","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23460,"byte_end":23467,"line_start":686,"line_end":686,"column_start":45,"column_end":52},"alias_span":null,"name":"InputAt","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23491,"byte_end":23506,"line_start":687,"line_end":687,"column_start":22,"column_end":37},"alias_span":null,"name":"LiteralSearcher","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2798},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23527,"byte_end":23534,"line_start":688,"line_end":688,"column_start":20,"column_end":27},"alias_span":null,"name":"Program","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2804},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23536,"byte_end":23540,"line_start":688,"line_end":688,"column_start":29,"column_end":33},"alias_span":null,"name":"Inst","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2844},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23542,"byte_end":23551,"line_start":688,"line_end":688,"column_start":35,"column_end":44},"alias_span":null,"name":"EmptyLook","value":"","parent":{"krate":0,"index":2164}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23553,"byte_end":23563,"line_start":688,"line_end":688,"column_start":46,"column_end":56},"alias_span":null,"name":"InstRanges","value":"","parent":{"krate":0,"index":2164}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":472,"byte_end":23567,"line_start":11,"line_end":689,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":56},{"krate":0,"index":66},{"krate":0,"index":114},{"krate":0,"index":134},{"krate":0,"index":318},{"krate":0,"index":550},{"krate":0,"index":568},{"krate":0,"index":800},{"krate":0,"index":826},{"krate":0,"index":830},{"krate":0,"index":1000},{"krate":0,"index":1302},{"krate":0,"index":1352},{"krate":0,"index":1430},{"krate":0,"index":1440},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":1766},{"krate":0,"index":2018},{"krate":0,"index":2054},{"krate":0,"index":2164}],"decl_id":null,"docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18173,"byte_end":18195,"line_start":520,"line_end":520,"column_start":1,"column_end":23}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":18196,"byte_end":18240,"line_start":521,"line_end":521,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":56},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22644,"byte_end":22649,"line_start":648,"line_end":648,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bytes","value":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64}],"decl_id":null,"docs":"Match regular expressions on arbitrary bytes.","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":22608,"byte_end":22635,"line_start":647,"line_end":647,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44461,"byte_end":44469,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"Compiler","qualname":"::compile::Compiler","value":"Compiler {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49}],"decl_id":null,"docs":" A compiler translates a regular expression AST to a sequence of\n instructions. The sequence of instructions represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44880,"byte_end":44883,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Compiler>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new regular expression compiler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":45478,"byte_end":45488,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<Compiler>::size_limit","value":"fn (mut self, size_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The size of the resulting program is limited by size_limit. If\n the program approximately exceeds the given size (in bytes), then\n compilation will stop and return an error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":46233,"byte_end":46238,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Compiler>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If bytes is true, then the program is compiled as a byte based\n automaton, which incorporates UTF-8 decoding into the machine. If it's\n false, then the automaton is Unicode scalar value based, e.g., an\n engine utilizing such an automaton is responsible for UTF-8 decoding.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":46521,"byte_end":46530,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Compiler>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When disabled, the program compiled may match arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":47013,"byte_end":47016,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"dfa","qualname":"<Compiler>::dfa","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When set, the machine returned is suitable for use in the DFA matching\n engine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":47251,"byte_end":47258,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Compiler>::reverse","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When set, the machine returned is suitable for matching text in\n reverse. In particular, all concatenations are flipped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":47612,"byte_end":47619,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"compile","qualname":"<Compiler>::compile","value":"fn (mut self, exprs: &[Hir]) -> result::Result<Program, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compile a regular expression given its AST.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159633,"byte_end":159639,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":2444},"children":[],"decl_id":null,"docs":" A syntax error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159759,"byte_end":159773,"line_start":21,"line_end":21,"column_start":5,"column_end":19},"name":"CompiledTooBig","qualname":"::error::Error::CompiledTooBig","value":"Error::CompiledTooBig(usize)","parent":{"krate":0,"index":2444},"children":[],"decl_id":null,"docs":" The compiled program exceeded the set size limit.\n The argument is the size limit imposed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160060,"byte_end":160075,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":2444},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2444},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":159597,"byte_end":159602,"line_start":16,"line_end":16,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Syntax, CompiledTooBig, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1019},{"krate":0,"index":1025}],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":163058,"byte_end":163062,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Exec","qualname":"::exec::Exec","value":"Exec {  }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":127}],"decl_id":null,"docs":" `Exec` manages the execution of a regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":163433,"byte_end":163443,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"ExecNoSync","qualname":"::exec::ExecNoSync","value":"ExecNoSync {  }","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1033}],"decl_id":null,"docs":" `ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\n means it is no longer Sync, but we can now avoid the overhead of\n synchronization to fetch the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":163682,"byte_end":163695,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"ExecNoSyncStr","qualname":"::exec::ExecNoSyncStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":165932,"byte_end":165943,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"ExecBuilder","qualname":"::exec::ExecBuilder","value":"ExecBuilder {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" Facilitates the construction of an executor by exposing various knobs\n to control how a regex is executed and what kinds of resources it's\n permitted to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166544,"byte_end":166547,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecBuilder>::new","value":"fn (re: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a regex execution builder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166873,"byte_end":166881,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"new_many","qualname":"<ExecBuilder>::new_many","value":"fn <I, S> (res: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Like new, but compiles the union of the given regular expressions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":167181,"byte_end":167192,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"new_options","qualname":"<ExecBuilder>::new_options","value":"fn (opts: RegexOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a regex execution builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":167690,"byte_end":167699,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"automatic","qualname":"<ExecBuilder>::automatic","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the matching engine to be automatically determined.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":168014,"byte_end":168017,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ExecBuilder>::nfa","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the matching engine to use the NFA algorithm no matter what\n optimizations are possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":168508,"byte_end":168528,"line_start":185,"line_end":185,"column_start":12,"column_end":32},"name":"bounded_backtracking","qualname":"<ExecBuilder>::bounded_backtracking","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the matching engine to use a bounded backtracking engine no\n matter what optimizations are possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":169096,"byte_end":169101,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ExecBuilder>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compiles byte based programs for use with the NFA matching engines.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":169372,"byte_end":169381,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<ExecBuilder>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When disabled, the program compiled may match arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":169504,"byte_end":169511,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExecBuilder>::unicode","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the Unicode flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":172620,"byte_end":172625,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"build","qualname":"<ExecBuilder>::build","value":"fn (self) -> Result<Exec, Error>","parent":null,"children":[],"decl_id":null,"docs":" Build an executor that can run a regular expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":199086,"byte_end":199101,"line_start":1062,"line_end":1062,"column_start":12,"column_end":27},"name":"many_matches_at","qualname":"<ExecNoSync>::many_matches_at","value":"fn (&self, matches: &mut [bool], text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds which regular expressions match the given text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":200950,"byte_end":200966,"line_start":1120,"line_end":1120,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSync>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201095,"byte_end":201111,"line_start":1126,"line_end":1126,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSyncStr>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201310,"byte_end":201318,"line_start":1134,"line_end":1134,"column_start":12,"column_end":20},"name":"searcher","qualname":"<Exec>::searcher","value":"fn (&self) -> ExecNoSync","parent":null,"children":[],"decl_id":null,"docs":" Get a searcher that isn't Sync.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201252,"byte_end":201269,"line_start":1133,"line_end":1133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201733,"byte_end":201745,"line_start":1146,"line_end":1146,"column_start":12,"column_end":24},"name":"searcher_str","qualname":"<Exec>::searcher_str","value":"fn (&self) -> ExecNoSyncStr","parent":null,"children":[],"decl_id":null,"docs":" Get a searcher that isn't Sync and can match on &str.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201675,"byte_end":201692,"line_start":1145,"line_end":1145,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201871,"byte_end":201881,"line_start":1151,"line_end":1151,"column_start":12,"column_end":22},"name":"into_regex","qualname":"<Exec>::into_regex","value":"fn (self) -> re_unicode::Regex","parent":null,"children":[],"decl_id":null,"docs":" Build a Regex from this executor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202012,"byte_end":202026,"line_start":1156,"line_end":1156,"column_start":12,"column_end":26},"name":"into_regex_set","qualname":"<Exec>::into_regex_set","value":"fn (self) -> re_set::unicode::RegexSet","parent":null,"children":[],"decl_id":null,"docs":" Build a RegexSet from this executor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202201,"byte_end":202216,"line_start":1161,"line_end":1161,"column_start":12,"column_end":27},"name":"into_byte_regex","qualname":"<Exec>::into_byte_regex","value":"fn (self) -> re_bytes::Regex","parent":null,"children":[],"decl_id":null,"docs":" Build a Regex from this executor that can match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202374,"byte_end":202393,"line_start":1166,"line_end":1166,"column_start":12,"column_end":31},"name":"into_byte_regex_set","qualname":"<Exec>::into_byte_regex_set","value":"fn (self) -> re_set::bytes::RegexSet","parent":null,"children":[],"decl_id":null,"docs":" Build a RegexSet from this executor that can match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202580,"byte_end":202593,"line_start":1172,"line_end":1172,"column_start":12,"column_end":25},"name":"regex_strings","qualname":"<Exec>::regex_strings","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The original regular expressions given by the caller that were\n compiled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202750,"byte_end":202763,"line_start":1179,"line_end":1179,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Exec>::capture_names","value":"fn (&self) -> &[Option<String>]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of capture names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":202938,"byte_end":202954,"line_start":1185,"line_end":1185,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<Exec>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to named groups mapping (from group name to\n group position).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224410,"byte_end":224417,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"InputAt","qualname":"::input::InputAt","value":"InputAt {  }","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1163},{"krate":0,"index":1165}],"decl_id":null,"docs":" Represents a location in the input.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224399,"byte_end":224488,"line_start":25,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224589,"byte_end":224597,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"is_start","qualname":"<InputAt>::is_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this position is at the beginning of the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224724,"byte_end":224730,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"is_end","qualname":"<InputAt>::is_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this position is past the end of the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224976,"byte_end":224980,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"char","qualname":"<InputAt>::char","value":"fn (&self) -> Char","parent":null,"children":[],"decl_id":null,"docs":" Returns the character at this position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225074,"byte_end":225078,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"byte","qualname":"<InputAt>::byte","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225205,"byte_end":225208,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<InputAt>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 width of the character at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225353,"byte_end":225361,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InputAt>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the UTF-8 width of the character at this position\n is zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225469,"byte_end":225472,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"pos","qualname":"<InputAt>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte offset of this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225593,"byte_end":225601,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"next_pos","qualname":"<InputAt>::next_pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte offset of the next position in the input.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":872},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225727,"byte_end":225732,"line_start":79,"line_end":79,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":888}],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225805,"byte_end":225807,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"at","qualname":"::input::Input::at","value":"fn (&self, i: usize) -> InputAt","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Return an encoding of the position at byte offset `i`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":225984,"byte_end":225993,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"next_char","qualname":"::input::Input::next_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Return the Unicode character occurring next to `at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226174,"byte_end":226187,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"previous_char","qualname":"::input::Input::previous_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Return the Unicode character occurring previous to `at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226327,"byte_end":226341,"line_start":95,"line_end":95,"column_start":8,"column_end":22},"name":"is_empty_match","qualname":"::input::Input::is_empty_match","value":"fn (&self, at: InputAt, empty: &InstEmptyLook) -> bool","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Return true if the given empty width instruction matches at the\n input position given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226448,"byte_end":226457,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"prefix_at","qualname":"::input::Input::prefix_at","value":"fn (&self, prefixes: &LiteralSearcher, at: InputAt) -> Option<InputAt>","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Scan the input for a matching prefix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226607,"byte_end":226610,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::input::Input::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" The number of bytes in the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226672,"byte_end":226680,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::input::Input::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Whether the input is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":226779,"byte_end":226787,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::input::Input::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":872},"children":[],"decl_id":null,"docs":" Return the given input as a sequence of bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227531,"byte_end":227540,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"CharInput","qualname":"::input::CharInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An input reader over characters.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227520,"byte_end":227555,"line_start":140,"line_end":140,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227659,"byte_end":227662,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<CharInput>::new","value":"fn (s: &'t [u8]) -> CharInput<'t>","parent":null,"children":[],"decl_id":null,"docs":" Return a new character input reader for the given string.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2590},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233604,"byte_end":233608,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"Char","qualname":"::input::Char","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inline representation of `Option<char>`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233593,"byte_end":233614,"line_start":346,"line_end":346,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233593,"byte_end":233614,"line_start":346,"line_end":346,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233932,"byte_end":233939,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Char>::is_none","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the character is absent.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233911,"byte_end":233920,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234131,"byte_end":234139,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"len_utf8","qualname":"<Char>::len_utf8","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the character's UTF-8 encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234110,"byte_end":234119,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234362,"byte_end":234374,"line_start":373,"line_end":373,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Char>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the character is a word character.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234594,"byte_end":234606,"line_start":380,"line_end":380,"column_start":12,"column_end":24},"name":"is_word_byte","qualname":"<Char>::is_word_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the byte is a word byte.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":236625,"byte_end":236640,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"LiteralSearcher","qualname":"::literal::LiteralSearcher","value":"LiteralSearcher {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259}],"decl_id":null,"docs":" A prefix extracted from a compiled regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237600,"byte_end":237605,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"empty","qualname":"<LiteralSearcher>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher that never matches and never advances the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237756,"byte_end":237764,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<LiteralSearcher>::prefixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for literal prefixes from the given set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237957,"byte_end":237965,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<LiteralSearcher>::suffixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for literal suffixes from the given set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":238826,"byte_end":238834,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"complete","qualname":"<LiteralSearcher>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all matches comprise the entire regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":239030,"byte_end":239034,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"find","qualname":"<LiteralSearcher>::find","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Find the position of a literal in `haystack` if it exists.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":238972,"byte_end":238989,"line_start":97,"line_end":97,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":239761,"byte_end":239771,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"find_start","qualname":"<LiteralSearcher>::find_start","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like find, except matches must start at index `0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240159,"byte_end":240167,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"find_end","qualname":"<LiteralSearcher>::find_end","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like find, except matches must end at index `haystack.len()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":240592,"byte_end":240596,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"iter","qualname":"<LiteralSearcher>::iter","value":"fn (&self) -> LiteralIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all literals to be matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":241318,"byte_end":241321,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"lcp","qualname":"<LiteralSearcher>::lcp","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for the longest common prefix of this matcher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":241456,"byte_end":241459,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"lcs","qualname":"<LiteralSearcher>::lcs","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for the longest common suffix of this matcher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":241568,"byte_end":241576,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LiteralSearcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this prefix is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":241692,"byte_end":241695,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"len","qualname":"<LiteralSearcher>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of prefixes in this machine.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":242147,"byte_end":242163,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<LiteralSearcher>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the approximate heap usage of literals in bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245561,"byte_end":245566,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Empty","qualname":"::literal::LiteralIter::Empty","value":"LiteralIter::Empty","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245572,"byte_end":245577,"line_start":273,"line_end":273,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::literal::LiteralIter::Bytes","value":"LiteralIter::Bytes(&'a [u8])","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245593,"byte_end":245599,"line_start":274,"line_end":274,"column_start":5,"column_end":11},"name":"Single","qualname":"::literal::LiteralIter::Single","value":"LiteralIter::Single(&'a [u8])","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":291},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245615,"byte_end":245617,"line_start":275,"line_end":275,"column_start":5,"column_end":7},"name":"AC","qualname":"::literal::LiteralIter::AC","value":"LiteralIter::AC(&'a [Literal])","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245638,"byte_end":245648,"line_start":276,"line_end":276,"column_start":5,"column_end":15},"name":"TeddySSSE3","qualname":"::literal::LiteralIter::TeddySSSE3","value":"LiteralIter::TeddySSSE3(&'a [Vec<u8>])","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245669,"byte_end":245678,"line_start":277,"line_end":277,"column_start":5,"column_end":14},"name":"TeddyAVX2","qualname":"::literal::LiteralIter::TeddyAVX2","value":"LiteralIter::TeddyAVX2(&'a [Vec<u8>])","parent":{"krate":0,"index":1228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1228},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245539,"byte_end":245550,"line_start":271,"line_end":271,"column_start":10,"column_end":21},"name":"LiteralIter","qualname":"::literal::LiteralIter","value":"LiteralIter::{Empty, Bytes, Single, AC, TeddySSSE3, TeddyAVX2}","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":297},{"krate":0,"index":303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":250278,"byte_end":250289,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"FreqyPacked","qualname":"::literal::FreqyPacked","value":"FreqyPacked {  }","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319}],"decl_id":null,"docs":" Provides an implementation of fast subtring search using frequency\n analysis.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":252732,"byte_end":252736,"line_start":502,"line_end":502,"column_start":12,"column_end":16},"name":"find","qualname":"<FreqyPacked>::find","value":"fn (&self, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":252674,"byte_end":252691,"line_start":501,"line_end":501,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":253564,"byte_end":253573,"line_start":528,"line_end":528,"column_start":12,"column_end":21},"name":"is_suffix","qualname":"<FreqyPacked>::is_suffix","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":253506,"byte_end":253523,"line_start":527,"line_end":527,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":253748,"byte_end":253751,"line_start":535,"line_end":535,"column_start":12,"column_end":15},"name":"len","qualname":"<FreqyPacked>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":253811,"byte_end":253819,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"char_len","qualname":"<FreqyPacked>::char_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2798},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":338336,"byte_end":338343,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Program","qualname":"::prog::Program","value":"Program { insts, matches, captures, capture_name_idx, start, byte_classes, only_utf8, is_bytes, is_dfa, is_reverse, is_anchored_start, is_anchored_end, has_unicode_word_boundary, prefixes, dfa_size_limit }","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397}],"decl_id":null,"docs":" Program is a sequence of instructions and various facts about thos\n instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":338413,"byte_end":338418,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"insts","qualname":"::prog::Program::insts","value":"std::vec::Vec<prog::Inst>","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" A sequence of instructions that represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":338583,"byte_end":338590,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"matches","qualname":"::prog::Program::matches","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" Pointers to each Match instruction in the sequence.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1373},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":338724,"byte_end":338732,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"captures","qualname":"::prog::Program::captures","value":"std::vec::Vec<std::option::Option<std::string::String>>","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" The ordered sequence of all capture groups extracted from the AST.\n Unnamed groups are `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1375},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":338825,"byte_end":338841,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"capture_name_idx","qualname":"::prog::Program::capture_name_idx","value":"std::sync::Arc<std::collections::HashMap<std::string::String, usize>>","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" Pointers to all named capture groups into `captures`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1377},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339198,"byte_end":339203,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::Program::start","value":"usize","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" A pointer to the start instruction. This can vary depending on how\n the program was compiled. For example, programs for use with the DFA\n engine have a `.*?` inserted at the beginning of unanchored regular\n expressions. The actual starting point of the program is after the\n `.*?`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1379},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339317,"byte_end":339329,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"byte_classes","qualname":"::prog::Program::byte_classes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" A set of equivalence classes for discriminating bytes in the compiled\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339408,"byte_end":339417,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"only_utf8","qualname":"::prog::Program::only_utf8","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" When true, this program can only match valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1383},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339541,"byte_end":339549,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"is_bytes","qualname":"::prog::Program::is_bytes","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" When true, this program uses byte range instructions instead of Unicode\n range instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1385},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339738,"byte_end":339744,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"is_dfa","qualname":"::prog::Program::is_dfa","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" When true, the program is compiled for DFA matching. For example, this\n implies `is_bytes` and also inserts a preceding `.*?` for unanchored\n regexes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1387},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339850,"byte_end":339860,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::prog::Program::is_reverse","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" When true, the program matches text in reverse (for use only in the\n DFA).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1389},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":339942,"byte_end":339959,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"is_anchored_start","qualname":"::prog::Program::is_anchored_start","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" Whether the regex must match from the start of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1391},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":340037,"byte_end":340052,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"is_anchored_end","qualname":"::prog::Program::is_anchored_end","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" Whether the regex must match at the end of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1393},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":340143,"byte_end":340168,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"has_unicode_word_boundary","qualname":"::prog::Program::has_unicode_word_boundary","value":"bool","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" Whether this program contains a Unicode word boundary instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1395},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":340260,"byte_end":340268,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"prefixes","qualname":"::prog::Program::prefixes","value":"literal::LiteralSearcher","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" A possibly empty machine for very quickly matching prefix literals.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1397},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":341095,"byte_end":341109,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::prog::Program::dfa_size_limit","value":"usize","parent":{"krate":0,"index":2798},"children":[],"decl_id":null,"docs":" A limit on the size of the cache that the DFA is allowed to use while\n matching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":341235,"byte_end":341238,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Program>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty instruction sequence. Fields are given default\n values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":341953,"byte_end":341957,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"skip","qualname":"<Program>::skip","value":"fn (&self, mut pc: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If pc is an index to a no-op instruction (like Save), then return the\n next pc that is not a no-op instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":342271,"byte_end":342285,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"leads_to_match","qualname":"<Program>::leads_to_match","value":"fn (&self, pc: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if an execution engine at instruction `pc` will\n always lead to a match.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":342811,"byte_end":342824,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"needs_dotstar","qualname":"<Program>::needs_dotstar","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the current configuration demands that an implicit\n `.*?` be prepended to the instruction sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":343031,"byte_end":343041,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"uses_bytes","qualname":"<Program>::uses_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this program uses Byte instructions instead of\n Char/Range instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":343276,"byte_end":343285,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Program>::only_utf8","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this program exclusively matches valid UTF-8 bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":343433,"byte_end":343449,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Program>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the approximate heap usage of this instruction sequence in\n bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348151,"byte_end":348156,"line_start":267,"line_end":267,"column_start":5,"column_end":10},"name":"Match","qualname":"::prog::Inst::Match","value":"Inst::Match(usize)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Match indicates that the program has reached a match state.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348286,"byte_end":348290,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"Save","qualname":"::prog::Inst::Save","value":"Inst::Save(InstSave)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Save causes the program to save the current location of the input in\n the slot indicated by InstSave.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1411},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348425,"byte_end":348430,"line_start":273,"line_end":273,"column_start":5,"column_end":10},"name":"Split","qualname":"::prog::Inst::Split","value":"Inst::Split(InstSplit)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Split causes the program to diverge to one of two paths in the\n program, preferring goto1 in InstSplit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348590,"byte_end":348599,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"EmptyLook","qualname":"::prog::Inst::EmptyLook","value":"Inst::EmptyLook(InstEmptyLook)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" EmptyLook represents a zero-width assertion in a regex program. A\n zero-width assertion does not consume any of the input text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1423},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348741,"byte_end":348745,"line_start":279,"line_end":279,"column_start":5,"column_end":9},"name":"Char","qualname":"::prog::Inst::Char","value":"Inst::Char(InstChar)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Char requires the regex program to match the character in InstChar at\n the current position in the input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":348919,"byte_end":348925,"line_start":282,"line_end":282,"column_start":5,"column_end":11},"name":"Ranges","qualname":"::prog::Inst::Ranges","value":"Inst::Ranges(InstRanges)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Ranges requires the regex program to match the character at the current\n position in the input with one of the ranges specified in InstRanges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1435},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349123,"byte_end":349128,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::prog::Inst::Bytes","value":"Inst::Bytes(InstBytes)","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Bytes is like Ranges, except it expresses a single byte range. It is\n used in conjunction with Split instructions to implement multi-byte\n character classes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2804},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":347722,"byte_end":347726,"line_start":259,"line_end":259,"column_start":10,"column_end":14},"name":"Inst","qualname":"::prog::Inst","value":"Inst::{Match, Save, Split, EmptyLook, Char, Ranges, Bytes}","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1405},{"krate":0,"index":1411},{"krate":0,"index":1417},{"krate":0,"index":1423},{"krate":0,"index":1429},{"krate":0,"index":1435}],"decl_id":null,"docs":" Inst is an instruction code in a Regex program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349232,"byte_end":349240,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Inst>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this is a match instruction.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2814},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349438,"byte_end":349446,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"InstSave","qualname":"::prog::InstSave","value":"InstSave { goto, slot }","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1443}],"decl_id":null,"docs":" Representation of the Save instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1441},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349510,"byte_end":349514,"line_start":303,"line_end":303,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstSave::goto","value":"usize","parent":{"krate":0,"index":2814},"children":[],"decl_id":null,"docs":" The next location to execute in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1443},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349669,"byte_end":349673,"line_start":306,"line_end":306,"column_start":9,"column_end":13},"name":"slot","qualname":"::prog::InstSave::slot","value":"usize","parent":{"krate":0,"index":2814},"children":[],"decl_id":null,"docs":" The capture slot (there are two slots for every capture in a regex,\n including the zeroth capture for the entire match).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2824},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349765,"byte_end":349774,"line_start":311,"line_end":311,"column_start":12,"column_end":21},"name":"InstSplit","qualname":"::prog::InstSplit","value":"InstSplit { goto1, goto2 }","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1447}],"decl_id":null,"docs":" Representation of the Split instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1445},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349930,"byte_end":349935,"line_start":314,"line_end":314,"column_start":9,"column_end":14},"name":"goto1","qualname":"::prog::InstSplit::goto1","value":"usize","parent":{"krate":0,"index":2824},"children":[],"decl_id":null,"docs":" The first instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1447},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350100,"byte_end":350105,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"goto2","qualname":"::prog::InstSplit::goto2","value":"usize","parent":{"krate":0,"index":2824},"children":[],"decl_id":null,"docs":" The second instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2834},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350205,"byte_end":350218,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"InstEmptyLook","qualname":"::prog::InstEmptyLook","value":"InstEmptyLook { goto, look }","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1451}],"decl_id":null,"docs":" Representation of the `EmptyLook` instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1449},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350319,"byte_end":350323,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstEmptyLook::goto","value":"usize","parent":{"krate":0,"index":2834},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350393,"byte_end":350397,"line_start":327,"line_end":327,"column_start":9,"column_end":13},"name":"look","qualname":"::prog::InstEmptyLook::look","value":"prog::EmptyLook","parent":{"krate":0,"index":2834},"children":[],"decl_id":null,"docs":" The type of zero-width assertion to check.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1453},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350561,"byte_end":350570,"line_start":334,"line_end":334,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::prog::EmptyLook::StartLine","value":"EmptyLook::StartLine","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" Start of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1457},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350606,"byte_end":350613,"line_start":336,"line_end":336,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::prog::EmptyLook::EndLine","value":"EmptyLook::EndLine","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" End of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350643,"byte_end":350652,"line_start":338,"line_end":338,"column_start":5,"column_end":14},"name":"StartText","qualname":"::prog::EmptyLook::StartText","value":"EmptyLook::StartText","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" Start of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350680,"byte_end":350687,"line_start":340,"line_end":340,"column_start":5,"column_end":12},"name":"EndText","qualname":"::prog::EmptyLook::EndText","value":"EmptyLook::EndText","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" End of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350761,"byte_end":350773,"line_start":342,"line_end":342,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::prog::EmptyLook::WordBoundary","value":"EmptyLook::WordBoundary","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" Word character on one side and non-word character on other.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1473},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350853,"byte_end":350868,"line_start":344,"line_end":344,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::prog::EmptyLook::NotWordBoundary","value":"EmptyLook::NotWordBoundary","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" Word character on both sides or non-word character on both sides.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1477},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350903,"byte_end":350920,"line_start":346,"line_end":346,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::prog::EmptyLook::WordBoundaryAscii","value":"EmptyLook::WordBoundaryAscii","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350959,"byte_end":350979,"line_start":348,"line_end":348,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::prog::EmptyLook::NotWordBoundaryAscii","value":"EmptyLook::NotWordBoundaryAscii","parent":{"krate":0,"index":2844},"children":[],"decl_id":null,"docs":" Not ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2844},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350513,"byte_end":350522,"line_start":332,"line_end":332,"column_start":10,"column_end":19},"name":"EmptyLook","qualname":"::prog::EmptyLook","value":"EmptyLook::{StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii}","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1457},{"krate":0,"index":1461},{"krate":0,"index":1465},{"krate":0,"index":1469},{"krate":0,"index":1473},{"krate":0,"index":1477},{"krate":0,"index":1481}],"decl_id":null,"docs":" The set of zero-width match instructions.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350504,"byte_end":350982,"line_start":332,"line_end":349,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":350504,"byte_end":350982,"line_start":332,"line_end":349,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351063,"byte_end":351071,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"InstChar","qualname":"::prog::InstChar","value":"InstChar { goto, c }","parent":null,"children":[{"krate":0,"index":1485},{"krate":0,"index":1487}],"decl_id":null,"docs":" Representation of the Char instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1485},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351172,"byte_end":351176,"line_start":356,"line_end":356,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstChar::goto","value":"usize","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1487},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351226,"byte_end":351227,"line_start":358,"line_end":358,"column_start":9,"column_end":10},"name":"c","qualname":"::prog::InstChar::c","value":"char","parent":{"krate":0,"index":2864},"children":[],"decl_id":null,"docs":" The character to test.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351319,"byte_end":351329,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"InstRanges","qualname":"::prog::InstRanges","value":"InstRanges { goto, ranges }","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1491}],"decl_id":null,"docs":" Representation of the Ranges instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1489},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351430,"byte_end":351434,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstRanges::goto","value":"usize","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351509,"byte_end":351515,"line_start":368,"line_end":368,"column_start":9,"column_end":15},"name":"ranges","qualname":"::prog::InstRanges::ranges","value":"std::vec::Vec<(char, char)>","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":" The set of Unicode scalar value ranges to test.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351642,"byte_end":351649,"line_start":373,"line_end":373,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstRanges>::matches","value":"fn (&self, c: Char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given input character matches this instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352435,"byte_end":352444,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"num_chars","qualname":"<InstRanges>::num_chars","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of distinct characters represented by all of the\n ranges.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352699,"byte_end":352708,"line_start":408,"line_end":408,"column_start":12,"column_end":21},"name":"InstBytes","qualname":"::prog::InstBytes","value":"InstBytes { goto, start, end }","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1497}],"decl_id":null,"docs":" Representation of the Bytes instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352809,"byte_end":352813,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstBytes::goto","value":"usize","parent":{"krate":0,"index":2884},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1495},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352882,"byte_end":352887,"line_start":413,"line_end":413,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::InstBytes::start","value":"u8","parent":{"krate":0,"index":2884},"children":[],"decl_id":null,"docs":" The start (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1497},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352949,"byte_end":352952,"line_start":415,"line_end":415,"column_start":9,"column_end":12},"name":"end","qualname":"::prog::InstBytes::end","value":"u8","parent":{"krate":0,"index":2884},"children":[],"decl_id":null,"docs":" The end (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":353058,"byte_end":353065,"line_start":420,"line_end":420,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstBytes>::matches","value":"fn (&self, byte: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given byte is in this range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353756,"byte_end":353768,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"RegexOptions","qualname":"::re_builder::RegexOptions","value":"RegexOptions { pats, size_limit, dfa_size_limit, nest_limit, case_insensitive, multi_line, dot_matches_new_line, swap_greed, ignore_whitespace, unicode, octal }","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1519}],"decl_id":null,"docs":" The set of user configurable options for compiling zero or more regexes.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353722,"byte_end":353744,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1499},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353779,"byte_end":353783,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"pats","qualname":"::re_builder::RegexOptions::pats","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1501},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353806,"byte_end":353816,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"size_limit","qualname":"::re_builder::RegexOptions::size_limit","value":"usize","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1503},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353833,"byte_end":353847,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::re_builder::RegexOptions::dfa_size_limit","value":"usize","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1505},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353864,"byte_end":353874,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"nest_limit","qualname":"::re_builder::RegexOptions::nest_limit","value":"u32","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1507},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353889,"byte_end":353905,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"name":"case_insensitive","qualname":"::re_builder::RegexOptions::case_insensitive","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1509},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353921,"byte_end":353931,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"multi_line","qualname":"::re_builder::RegexOptions::multi_line","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1511},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353947,"byte_end":353967,"line_start":21,"line_end":21,"column_start":9,"column_end":29},"name":"dot_matches_new_line","qualname":"::re_builder::RegexOptions::dot_matches_new_line","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1513},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":353983,"byte_end":353993,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"name":"swap_greed","qualname":"::re_builder::RegexOptions::swap_greed","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1515},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":354009,"byte_end":354026,"line_start":23,"line_end":23,"column_start":9,"column_end":26},"name":"ignore_whitespace","qualname":"::re_builder::RegexOptions::ignore_whitespace","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":354042,"byte_end":354049,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"unicode","qualname":"::re_builder::RegexOptions::unicode","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1519},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":354065,"byte_end":354070,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"octal","qualname":"::re_builder::RegexOptions::octal","value":"bool","parent":{"krate":0,"index":2894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3056},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369195,"byte_end":369200,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_bytes::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369184,"byte_end":369262,"line_start":30,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369184,"byte_end":369262,"line_start":30,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369381,"byte_end":369386,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369360,"byte_end":369369,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369525,"byte_end":369528,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369504,"byte_end":369513,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369630,"byte_end":369638,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Match>::as_bytes","value":"fn (&self) -> &'t [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369609,"byte_end":369618,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3078},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":370652,"byte_end":370657,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_bytes::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371716,"byte_end":371719,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compiles a regular expression. Once compiled, it can be used repeatedly\n to search, split or replace text in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":372450,"byte_end":372458,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the regex matches the string given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":373320,"byte_end":373324,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t> (&self, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end byte range of the leftmost-first match in\n `text`. If no match exists, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":374040,"byte_end":374049,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for each successive non-overlapping match in\n `text`, returning the start and end byte indices with respect to\n `text`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":377186,"byte_end":377194,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t> (&self, text: &'t [u8]) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups corresponding to the leftmost-first\n match in `text`. Capture group `0` always corresponds to the entire\n match. If no match is found, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":378639,"byte_end":378652,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the non-overlapping capture groups matched\n in `text`. This is operationally the same as `find_iter`, except it\n yields information about capturing group matches.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":379570,"byte_end":379575,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of substrings of `text` delimited by a match of the\n regular expression. Namely, each element of the iterator corresponds to\n text that *isn't* matched by the regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":380591,"byte_end":380597,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't> (&'r self, text: &'t [u8], limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of `text` delimited\n by a match of the regular expression. (A `limit` of `0` will return no\n substrings.) Namely, each element of the iterator corresponds to text\n that *isn't* matched by the regular expression. The remainder of the\n string that is not split will be the last element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":385380,"byte_end":385387,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the leftmost-first match with the replacement provided. The\n replacement can be a regular byte string (where `$N` and `$name` are\n expanded to match capture groups) or a function that takes the matches'\n `Captures` and returns the replaced byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":385844,"byte_end":385855,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces all non-overlapping matches in `text` with the replacement\n provided. This is the same as calling `replacen` with `limit` set to\n `0`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":386324,"byte_end":386332,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t [u8], limit: usize, mut rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces at most `limit` non-overlapping matches in `text` with the\n replacement provided. If `limit` is 0, then all non-overlapping matches\n are replaced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":388807,"byte_end":388821,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the end location of a match in the text given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":389209,"byte_end":389226,"line_start":571,"line_end":571,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &[u8], start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as shortest_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":389670,"byte_end":389681,"line_start":585,"line_end":585,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as is_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":390078,"byte_end":390085,"line_start":595,"line_end":595,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t> (&self, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as find, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":390733,"byte_end":390746,"line_start":614,"line_end":614,"column_start":12,"column_end":25},"name":"captures_read","qualname":"<Regex>::captures_read","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" This is like `captures`, but uses\n [`CaptureLocations`](struct.CaptureLocations.html)\n instead of\n [`Captures`](struct.Captures.html) in order to amortize allocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":391253,"byte_end":391269,"line_start":628,"line_end":628,"column_start":12,"column_end":28},"name":"captures_read_at","qualname":"<Regex>::captures_read_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as `captures_read`, but starts the search at the given\n offset and populates the capture locations given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":391814,"byte_end":391830,"line_start":646,"line_end":646,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" An undocumented alias for `captures_read_at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392119,"byte_end":392125,"line_start":659,"line_end":659,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392248,"byte_end":392261,"line_start":664,"line_end":664,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392397,"byte_end":392409,"line_start":669,"line_end":669,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392620,"byte_end":392637,"line_start":675,"line_end":675,"column_start":12,"column_end":29},"name":"capture_locations","qualname":"<Regex>::capture_locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty set of capture locations that can be reused in\n multiple calls to `captures_read` or `captures_read_at`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392984,"byte_end":392993,"line_start":684,"line_end":684,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" An alias for `capture_locations` to preserve backward compatibility.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1556},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":393483,"byte_end":393490,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_bytes::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394063,"byte_end":394077,"line_start":715,"line_end":715,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_bytes::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1572},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394658,"byte_end":394663,"line_start":733,"line_end":733,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_bytes::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":395646,"byte_end":395652,"line_start":768,"line_end":768,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_bytes::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":396347,"byte_end":396359,"line_start":796,"line_end":796,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_bytes::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3084},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":397494,"byte_end":397510,"line_start":827,"line_end":827,"column_start":12,"column_end":28},"name":"CaptureLocations","qualname":"::re_bytes::CaptureLocations","value":"","parent":null,"children":[],"decl_id":null,"docs":" CaptureLocations is a low level representation of the raw offsets of each\n submatch.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1598},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":397832,"byte_end":397841,"line_start":835,"line_end":835,"column_start":10,"column_end":19},"name":"Locations","qualname":"::re_bytes::Locations","value":"CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `CaptureLocations` for backwards compatibility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398199,"byte_end":398202,"line_start":843,"line_end":843,"column_start":12,"column_end":15},"name":"get","qualname":"<CaptureLocations>::get","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398178,"byte_end":398187,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398497,"byte_end":398500,"line_start":852,"line_end":852,"column_start":12,"column_end":15},"name":"len","qualname":"<CaptureLocations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398476,"byte_end":398485,"line_start":851,"line_end":851,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398860,"byte_end":398863,"line_start":863,"line_end":863,"column_start":12,"column_end":15},"name":"pos","qualname":"<CaptureLocations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the `get` method for backwards compatibility.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":398839,"byte_end":398848,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1608},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":399497,"byte_end":399505,"line_start":879,"line_end":879,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_bytes::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":453}],"decl_id":null,"docs":" Captures represents a group of captured byte strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":400440,"byte_end":400443,"line_start":905,"line_end":905,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match associated with the capture group at index `i`. If\n `i` does not correspond to a capture group, or if the capture group\n did not participate in the match, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":400728,"byte_end":400732,"line_start":911,"line_end":911,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for the capture group named `name`. If `name` isn't a\n valid capture group or didn't match anything, then `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1616},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":401164,"byte_end":401168,"line_start":920,"line_end":920,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"fn <'c> (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which\n they appear in the regex. If a particular capture group didn't\n participate in the match, then `None` is yielded for that capture.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402212,"byte_end":402218,"line_start":943,"line_end":943,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"fn (&self, replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$name` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402529,"byte_end":402532,"line_start":952,"line_end":952,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captured groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402508,"byte_end":402517,"line_start":951,"line_end":951,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":405662,"byte_end":405679,"line_start":1049,"line_end":1049,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_bytes::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":503}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1658},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":406372,"byte_end":406380,"line_start":1070,"line_end":1070,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_bytes::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":406666,"byte_end":406680,"line_start":1078,"line_end":1078,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_bytes::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" Appends text to `dst` to replace the current match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":407091,"byte_end":407103,"line_start":1087,"line_end":1087,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_bytes::Replacer::no_expansion","value":"fn <'r> (&'r mut self) -> Option<Cow<'r, [u8]>>","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" Return a fixed unchanging replacement byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":407834,"byte_end":407840,"line_start":1112,"line_end":1112,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_bytes::Replacer::by_ref","value":"fn <'r> (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" Return a `Replacer` that borrows and wraps this `Replacer`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3094},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":408068,"byte_end":408079,"line_start":1121,"line_end":1121,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_bytes::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":409364,"byte_end":409372,"line_start":1159,"line_end":1159,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_bytes::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal byte string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":426170,"byte_end":426179,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Locations","qualname":"::re_trait::Locations","value":"","parent":null,"children":[],"decl_id":null,"docs":" Locations represents the offsets of each capturing group in a regex for\n a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":426508,"byte_end":426511,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pos","qualname":"<Locations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":426955,"byte_end":426959,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"iter","qualname":"<Locations>::iter","value":"fn (&self) -> SubCapturesPosIter","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator of all the capture group positions in order of\n appearance in the regular expression. Positions are byte indices\n in terms of the original string matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":427254,"byte_end":427257,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"len","qualname":"<Locations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":427670,"byte_end":427688,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"SubCapturesPosIter","qualname":"::re_trait::SubCapturesPosIter","value":"SubCapturesPosIter {  }","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":541}],"decl_id":null,"docs":" An iterator over capture group positions for a particular match of a\n regular expression.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1716},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":428891,"byte_end":428908,"line_start":99,"line_end":99,"column_start":11,"column_end":28},"name":"RegularExpression","qualname":"::re_trait::RegularExpression","value":"RegularExpression: Sized","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736}],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1718},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":428961,"byte_end":428965,"line_start":101,"line_end":101,"column_start":10,"column_end":14},"name":"Text","qualname":"::re_trait::RegularExpression::Text","value":"type Text: ?Sized;","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" The type of the haystack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":429140,"byte_end":429149,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"slots_len","qualname":"::re_trait::RegularExpression::slots_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" The number of capture slots in the compiled regular expression. This is\n always two times the number of capture groups (two slots per group).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":429245,"byte_end":429254,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"locations","qualname":"::re_trait::RegularExpression::locations","value":"fn (&self) -> Locations","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Allocates fresh space for all capturing groups in this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":429600,"byte_end":429616,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"next_after_empty","qualname":"::re_trait::RegularExpression::next_after_empty","value":"fn (&self, text: &Self::Text, i: usize) -> usize","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns the position of the next character after `i`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":429723,"byte_end":429740,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"shortest_match_at","qualname":"::re_trait::RegularExpression::shortest_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<usize>","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns the location of the shortest match.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":429896,"byte_end":429907,"line_start":127,"line_end":127,"column_start":8,"column_end":19},"name":"is_match_at","qualname":"::re_trait::RegularExpression::is_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> bool","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns whether the regex matches the text given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":430061,"byte_end":430068,"line_start":134,"line_end":134,"column_start":8,"column_end":15},"name":"find_at","qualname":"::re_trait::RegularExpression::find_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns the leftmost-first match location if one exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":430303,"byte_end":430319,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"captures_read_at","qualname":"::re_trait::RegularExpression::captures_read_at","value":"fn (&self, locs: &mut Locations, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns the leftmost-first match location if one exists, and also\n fills in any matching capture slot locations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":430552,"byte_end":430561,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::re_trait::RegularExpression::find_iter","value":"fn (self, text: &Self::Text) -> Matches<Self>","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns an iterator over all non-overlapping successive leftmost-first\n matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":430883,"byte_end":430896,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"captures_iter","qualname":"::re_trait::RegularExpression::captures_iter","value":"fn (self, text: &Self::Text) -> CaptureMatches<Self>","parent":{"krate":0,"index":1716},"children":[],"decl_id":null,"docs":" Returns an iterator over all non-overlapping successive leftmost-first\n matches with captures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1738},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431112,"byte_end":431119,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_trait::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555}],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431378,"byte_end":431382,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431480,"byte_end":431485,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":432685,"byte_end":432699,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_trait::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches with\n captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":432896,"byte_end":432900,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":433002,"byte_end":433007,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1804},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":434888,"byte_end":434894,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"escape","qualname":"::re_unicode::escape","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3350},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435145,"byte_end":435150,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_unicode::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435134,"byte_end":435211,"line_start":39,"line_end":43,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435134,"byte_end":435211,"line_start":39,"line_end":43,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435330,"byte_end":435335,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435309,"byte_end":435318,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435474,"byte_end":435477,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435453,"byte_end":435462,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435579,"byte_end":435585,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match>::as_str","value":"fn (&self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435558,"byte_end":435567,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3372},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438290,"byte_end":438295,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_unicode::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching Unicode strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":439237,"byte_end":439240,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compiles a regular expression. Once compiled, it can be used repeatedly\n to search, split or replace text in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":439970,"byte_end":439978,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the regex matches the string given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":440854,"byte_end":440858,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t> (&self, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end byte range of the leftmost-first match in\n `text`. If no match exists, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":441572,"byte_end":441581,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't> (&'r self, text: &'t str) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for each successive non-overlapping match in\n `text`, returning the start and end byte indices with respect to\n `text`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":444661,"byte_end":444669,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t> (&self, text: &'t str) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups corresponding to the leftmost-first\n match in `text`. Capture group `0` always corresponds to the entire\n match. If no match is found, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":446002,"byte_end":446015,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't> (&'r self, text: &'t str) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the non-overlapping capture groups matched\n in `text`. This is operationally the same as `find_iter`, except it\n yields information about capturing group matches.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":446874,"byte_end":446879,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't> (&'r self, text: &'t str) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of substrings of `text` delimited by a match of the\n regular expression. Namely, each element of the iterator corresponds to\n text that *isn't* matched by the regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":447867,"byte_end":447873,"line_start":397,"line_end":397,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't> (&'r self, text: &'t str, limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of `text` delimited\n by a match of the regular expression. (A `limit` of `0` will return no\n substrings.) Namely, each element of the iterator corresponds to text\n that *isn't* matched by the regular expression. The remainder of the\n string that is not split will be the last element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":452410,"byte_end":452417,"line_start":509,"line_end":509,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the leftmost-first match with the replacement provided.\n The replacement can be a regular string (where `$N` and `$name` are\n expanded to match capture groups) or a function that takes the matches'\n `Captures` and returns the replaced string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":452874,"byte_end":452885,"line_start":523,"line_end":523,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces all non-overlapping matches in `text` with the replacement\n provided. This is the same as calling `replacen` with `limit` set to\n `0`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":453354,"byte_end":453362,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t str, limit: usize, mut rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces at most `limit` non-overlapping matches in `text` with the\n replacement provided. If `limit` is 0, then all non-overlapping matches\n are replaced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":456318,"byte_end":456332,"line_start":617,"line_end":617,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the end location of a match in the text given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":456719,"byte_end":456736,"line_start":627,"line_end":627,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &str, start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as shortest_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":457183,"byte_end":457194,"line_start":641,"line_end":641,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &str, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as is_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":457590,"byte_end":457597,"line_start":651,"line_end":651,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t> (&self, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as find, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":458259,"byte_end":458272,"line_start":671,"line_end":671,"column_start":12,"column_end":25},"name":"captures_read","qualname":"<Regex>::captures_read","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" This is like `captures`, but uses\n [`CaptureLocations`](struct.CaptureLocations.html)\n instead of\n [`Captures`](struct.Captures.html) in order to amortize allocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":458771,"byte_end":458787,"line_start":685,"line_end":685,"column_start":12,"column_end":28},"name":"captures_read_at","qualname":"<Regex>::captures_read_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as captures, but starts the search at the given\n offset and populates the capture locations given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459335,"byte_end":459351,"line_start":703,"line_end":703,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" An undocumented alias for `captures_read_at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459639,"byte_end":459645,"line_start":716,"line_end":716,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459768,"byte_end":459781,"line_start":721,"line_end":721,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459917,"byte_end":459929,"line_start":726,"line_end":726,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":460140,"byte_end":460157,"line_start":732,"line_end":732,"column_start":12,"column_end":29},"name":"capture_locations","qualname":"<Regex>::capture_locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty set of capture locations that can be reused in\n multiple calls to `captures_read` or `captures_read_at`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":460508,"byte_end":460517,"line_start":741,"line_end":741,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" An alias for `capture_locations` to preserve backward compatibility.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1890},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":460873,"byte_end":460885,"line_start":752,"line_end":752,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_unicode::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1900},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":461474,"byte_end":461479,"line_start":773,"line_end":773,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_unicode::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":649}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1908},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":462455,"byte_end":462461,"line_start":808,"line_end":808,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_unicode::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":463667,"byte_end":463683,"line_start":846,"line_end":846,"column_start":12,"column_end":28},"name":"CaptureLocations","qualname":"::re_unicode::CaptureLocations","value":"","parent":null,"children":[],"decl_id":null,"docs":" CaptureLocations is a low level representation of the raw offsets of each\n submatch.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1916},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464005,"byte_end":464014,"line_start":854,"line_end":854,"column_start":10,"column_end":19},"name":"Locations","qualname":"::re_unicode::Locations","value":"CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `CaptureLocations` for backwards compatibility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464372,"byte_end":464375,"line_start":862,"line_end":862,"column_start":12,"column_end":15},"name":"get","qualname":"<CaptureLocations>::get","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464351,"byte_end":464360,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464670,"byte_end":464673,"line_start":871,"line_end":871,"column_start":12,"column_end":15},"name":"len","qualname":"<CaptureLocations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464649,"byte_end":464658,"line_start":870,"line_end":870,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":465033,"byte_end":465036,"line_start":882,"line_end":882,"column_start":12,"column_end":15},"name":"pos","qualname":"<CaptureLocations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the `get` method for backwards compatibility.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":465012,"byte_end":465021,"line_start":881,"line_end":881,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1926},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":465660,"byte_end":465668,"line_start":898,"line_end":898,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_unicode::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673}],"decl_id":null,"docs":" Captures represents a group of captured strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":466566,"byte_end":466569,"line_start":924,"line_end":924,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match associated with the capture group at index `i`. If\n `i` does not correspond to a capture group, or if the capture group\n did not participate in the match, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":466854,"byte_end":466858,"line_start":930,"line_end":930,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for the capture group named `name`. If `name` isn't a\n valid capture group or didn't match anything, then `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":467290,"byte_end":467294,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"fn <'c> (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which\n they appear in the regex. If a particular capture group didn't\n participate in the match, then `None` is yielded for that capture.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468338,"byte_end":468344,"line_start":962,"line_end":962,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"fn (&self, replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$name` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468651,"byte_end":468654,"line_start":971,"line_end":971,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captured groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468630,"byte_end":468639,"line_start":970,"line_end":970,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1962},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":471332,"byte_end":471349,"line_start":1053,"line_end":1053,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_unicode::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":723}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1970},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":471976,"byte_end":471990,"line_start":1074,"line_end":1074,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_unicode::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1978},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":472675,"byte_end":472682,"line_start":1095,"line_end":1095,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_unicode::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1986},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":473307,"byte_end":473315,"line_start":1112,"line_end":1112,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_unicode::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1992}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":473622,"byte_end":473636,"line_start":1120,"line_end":1120,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_unicode::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut String) -> ()","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Appends text to `dst` to replace the current match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":474041,"byte_end":474053,"line_start":1129,"line_end":1129,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_unicode::Replacer::no_expansion","value":"fn <'r> (&'r mut self) -> Option<Cow<'r, str>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Return a fixed unchanging replacement string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":474774,"byte_end":474780,"line_start":1154,"line_end":1154,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_unicode::Replacer::by_ref","value":"fn <'r> (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Return a `Replacer` that borrows and wraps this `Replacer`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3388},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":475008,"byte_end":475019,"line_start":1163,"line_end":1163,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_unicode::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2010},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":476277,"byte_end":476285,"line_start":1201,"line_end":1201,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_unicode::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3394},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477166,"byte_end":477175,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SparseSet","qualname":"::sparse::SparseSet","value":"SparseSet {  }","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1687}],"decl_id":null,"docs":" A sparse set used for representing ordered NFA states.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477554,"byte_end":477557,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseSet>::new","value":"fn (size: usize) -> SparseSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477733,"byte_end":477736,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477798,"byte_end":477806,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477872,"byte_end":477880,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SparseSet>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477947,"byte_end":477953,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"insert","qualname":"<SparseSet>::insert","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":478129,"byte_end":478137,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"contains","qualname":"<SparseSet>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":478265,"byte_end":478270,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"clear","qualname":"<SparseSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2164},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23335,"byte_end":23343,"line_start":683,"line_end":683,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\regex-1.1.7\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2174},{"krate":0,"index":2184},{"krate":0,"index":2186}],"decl_id":null,"docs":" The `internal` module exists to support suspicious activity, such as\n testing different matching engines and supporting the `regex-debug` CLI\n utility.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_std\")","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,98,46,114,115],"byte_start":23299,"byte_end":23326,"line_start":682,"line_end":682,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26302,"byte_end":26307,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26969,"byte_end":26976,"line_start":89,"line_end":89,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44722,"byte_end":44730,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":71206,"byte_end":71215,"line_start":742,"line_end":742,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":73392,"byte_end":73400,"line_start":805,"line_end":805,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":74333,"byte_end":74345,"line_start":838,"line_end":838,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":79099,"byte_end":79110,"line_start":969,"line_end":969,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":80352,"byte_end":80364,"line_start":1011,"line_end":1011,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":93353,"byte_end":93359,"line_start":225,"line_end":225,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":95655,"byte_end":95663,"line_start":296,"line_end":296,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":96085,"byte_end":96090,"line_start":313,"line_end":313,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":100321,"byte_end":100326,"line_start":424,"line_end":424,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101145,"byte_end":101155,"line_start":448,"line_end":448,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101459,"byte_end":101462,"line_start":458,"line_end":458,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":150050,"byte_end":150058,"line_start":1635,"line_end":1635,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":150852,"byte_end":150863,"line_start":1671,"line_end":1671,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":152724,"byte_end":152734,"line_start":1728,"line_end":1728,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153170,"byte_end":153174,"line_start":1754,"line_end":1754,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153750,"byte_end":153755,"line_start":1779,"line_end":1779,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154026,"byte_end":154037,"line_start":1789,"line_end":1789,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154459,"byte_end":154473,"line_start":1803,"line_end":1803,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154979,"byte_end":154989,"line_start":1821,"line_end":1821,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160109,"byte_end":160114,"line_start":31,"line_end":31,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160381,"byte_end":160386,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":161035,"byte_end":161040,"line_start":58,"line_end":58,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166250,"byte_end":166261,"line_start":123,"line_end":123,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":175721,"byte_end":175734,"line_start":368,"line_end":368,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":176772,"byte_end":176782,"line_start":403,"line_end":403,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":186209,"byte_end":186219,"line_start":642,"line_end":642,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201064,"byte_end":201077,"line_start":1125,"line_end":1125,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201201,"byte_end":201205,"line_start":1131,"line_end":1131,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":203058,"byte_end":203062,"line_start":1190,"line_end":1190,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":203212,"byte_end":203224,"line_start":1199,"line_end":1199,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":208790,"byte_end":208807,"line_start":1346,"line_end":1346,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":215769,"byte_end":215772,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":215868,"byte_end":215871,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224495,"byte_end":224502,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227566,"byte_end":227575,"line_start":142,"line_end":142,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227749,"byte_end":227758,"line_start":149,"line_end":149,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227864,"byte_end":227873,"line_start":157,"line_end":157,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229992,"byte_end":230001,"line_start":232,"line_end":232,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230263,"byte_end":230272,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230381,"byte_end":230390,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233636,"byte_end":233640,"line_start":348,"line_end":348,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233850,"byte_end":233854,"line_start":357,"line_end":357,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234809,"byte_end":234813,"line_start":388,"line_end":388,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234895,"byte_end":234899,"line_start":392,"line_end":392,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":235022,"byte_end":235026,"line_start":398,"line_end":398,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":235255,"byte_end":235259,"line_start":408,"line_end":408,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":277720,"byte_end":277725,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1084},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":289341,"byte_end":289346,"line_start":367,"line_end":367,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":292133,"byte_end":292137,"line_start":448,"line_end":448,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":309583,"byte_end":309588,"line_start":362,"line_end":362,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":321208,"byte_end":321213,"line_start":677,"line_end":677,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":324001,"byte_end":324005,"line_start":758,"line_end":758,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237496,"byte_end":237511,"line_start":58,"line_end":58,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":242643,"byte_end":242650,"line_start":200,"line_end":200,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245720,"byte_end":245731,"line_start":280,"line_end":280,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":247446,"byte_end":247459,"line_start":343,"line_end":343,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":251366,"byte_end":251377,"line_start":452,"line_end":452,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":256684,"byte_end":256700,"line_start":615,"line_end":615,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":327801,"byte_end":327806,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":328100,"byte_end":328103,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1338},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":337303,"byte_end":337310,"line_start":358,"line_end":358,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1348},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":341126,"byte_end":341133,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":344087,"byte_end":344094,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":344235,"byte_end":344242,"line_start":170,"line_end":170,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349149,"byte_end":349153,"line_start":289,"line_end":289,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351544,"byte_end":351554,"line_start":371,"line_end":371,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352966,"byte_end":352975,"line_start":418,"line_end":418,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":354098,"byte_end":354110,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369273,"byte_end":369278,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":370688,"byte_end":370693,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":370870,"byte_end":370875,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371180,"byte_end":371185,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371269,"byte_end":371274,"line_start":104,"line_end":104,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371485,"byte_end":371490,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":388006,"byte_end":388011,"line_start":539,"line_end":539,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392049,"byte_end":392054,"line_start":657,"line_end":657,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":393566,"byte_end":393573,"line_start":699,"line_end":699,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394160,"byte_end":394174,"line_start":717,"line_end":717,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394749,"byte_end":394754,"line_start":738,"line_end":738,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":395733,"byte_end":395739,"line_start":773,"line_end":773,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":396428,"byte_end":396440,"line_start":798,"line_end":798,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":397868,"byte_end":397884,"line_start":837,"line_end":837,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":399622,"byte_end":399630,"line_start":885,"line_end":885,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402608,"byte_end":402616,"line_start":957,"line_end":957,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402843,"byte_end":402856,"line_start":965,"line_end":965,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":404347,"byte_end":404355,"line_start":1010,"line_end":1010,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":404991,"byte_end":404999,"line_start":1031,"line_end":1031,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":405783,"byte_end":405800,"line_start":1054,"line_end":1054,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":408162,"byte_end":408173,"line_start":1123,"line_end":1123,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":408759,"byte_end":408760,"line_start":1145,"line_end":1145,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":409415,"byte_end":409423,"line_start":1161,"line_end":1161,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":426198,"byte_end":426207,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":427761,"byte_end":427779,"line_start":69,"line_end":69,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431270,"byte_end":431277,"line_start":181,"line_end":181,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431552,"byte_end":431559,"line_start":193,"line_end":193,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":432781,"byte_end":432795,"line_start":228,"line_end":228,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":433080,"byte_end":433094,"line_start":240,"line_end":240,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435222,"byte_end":435227,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438326,"byte_end":438331,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438508,"byte_end":438513,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438701,"byte_end":438706,"line_start":154,"line_end":154,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438790,"byte_end":438795,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":439006,"byte_end":439011,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":455525,"byte_end":455530,"line_start":595,"line_end":595,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459569,"byte_end":459574,"line_start":714,"line_end":714,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":460954,"byte_end":460966,"line_start":754,"line_end":754,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":461565,"byte_end":461570,"line_start":778,"line_end":778,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":462542,"byte_end":462548,"line_start":813,"line_end":813,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464041,"byte_end":464057,"line_start":856,"line_end":856,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":465784,"byte_end":465792,"line_start":904,"line_end":904,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468730,"byte_end":468738,"line_start":976,"line_end":976,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468965,"byte_end":468978,"line_start":984,"line_end":984,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":470025,"byte_end":470033,"line_start":1014,"line_end":1014,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":470665,"byte_end":470673,"line_start":1035,"line_end":1035,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":471453,"byte_end":471470,"line_start":1058,"line_end":1058,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":472076,"byte_end":472090,"line_start":1076,"line_end":1076,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":472761,"byte_end":472768,"line_start":1097,"line_end":1097,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":475102,"byte_end":475113,"line_start":1165,"line_end":1165,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":475693,"byte_end":475694,"line_start":1187,"line_end":1187,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":476327,"byte_end":476335,"line_start":1203,"line_end":1203,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477531,"byte_end":477540,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":478336,"byte_end":478345,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":478847,"byte_end":478864,"line_start":9,"line_end":9,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":480563,"byte_end":480568,"line_start":64,"line_end":64,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":484351,"byte_end":484356,"line_start":182,"line_end":182,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":484994,"byte_end":485012,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":487332,"byte_end":487337,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":490111,"byte_end":490116,"line_start":187,"line_end":187,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26302,"byte_end":26307,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26969,"byte_end":26976,"line_start":89,"line_end":89,"column_start":32,"column_end":39},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":2196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":44722,"byte_end":44730,"line_start":48,"line_end":48,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":71206,"byte_end":71215,"line_start":742,"line_end":742,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":2236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":73392,"byte_end":73400,"line_start":805,"line_end":805,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":2246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":74333,"byte_end":74345,"line_start":838,"line_end":838,"column_start":14,"column_end":26},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":79099,"byte_end":79110,"line_start":969,"line_end":969,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,99,111,109,112,105,108,101,46,114,115],"byte_start":80352,"byte_end":80364,"line_start":1011,"line_end":1011,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":93353,"byte_end":93359,"line_start":225,"line_end":225,"column_start":9,"column_end":15},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":2340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":95655,"byte_end":95663,"line_start":296,"line_end":296,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":356},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":96085,"byte_end":96090,"line_start":313,"line_end":313,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":100321,"byte_end":100326,"line_start":424,"line_end":424,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101145,"byte_end":101155,"line_start":448,"line_end":448,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":2322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":101459,"byte_end":101462,"line_start":458,"line_end":458,"column_start":10,"column_end":13},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":2334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":150050,"byte_end":150058,"line_start":1635,"line_end":1635,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":2438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":150852,"byte_end":150863,"line_start":1671,"line_end":1671,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":2328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":152724,"byte_end":152734,"line_start":1728,"line_end":1728,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":2412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153170,"byte_end":153174,"line_start":1754,"line_end":1754,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":2370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":153750,"byte_end":153755,"line_start":1779,"line_end":1779,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":2350},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154026,"byte_end":154037,"line_start":1789,"line_end":1789,"column_start":21,"column_end":32},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":2328},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154459,"byte_end":154473,"line_start":1803,"line_end":1803,"column_start":25,"column_end":39},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":524},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,100,102,97,46,114,115],"byte_start":154979,"byte_end":154989,"line_start":1821,"line_end":1821,"column_start":21,"column_end":31},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":2412},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160109,"byte_end":160114,"line_start":31,"line_end":31,"column_start":30,"column_end":35},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":2444},"to":{"krate":1,"index":2484}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":160381,"byte_end":160386,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":8478}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,114,114,111,114,46,114,115],"byte_start":161035,"byte_end":161040,"line_start":58,"line_end":58,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":166250,"byte_end":166261,"line_start":123,"line_end":123,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":175721,"byte_end":175734,"line_start":368,"line_end":368,"column_start":32,"column_end":45},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":632},"to":{"krate":0,"index":1716}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":176772,"byte_end":176782,"line_start":403,"line_end":403,"column_start":32,"column_end":42},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":2456},"to":{"krate":0,"index":1716}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":186209,"byte_end":186219,"line_start":642,"line_end":642,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":2456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201064,"byte_end":201077,"line_start":1125,"line_end":1125,"column_start":10,"column_end":23},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":201201,"byte_end":201205,"line_start":1131,"line_end":1131,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":203058,"byte_end":203062,"line_start":1190,"line_end":1190,"column_start":16,"column_end":20},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":630},"to":{"krate":2,"index":2614}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":203212,"byte_end":203224,"line_start":1199,"line_end":1199,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":2462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,101,99,46,114,115],"byte_start":208790,"byte_end":208807,"line_start":1346,"line_end":1346,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":2504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":215769,"byte_end":215772,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,101,120,112,97,110,100,46,114,115],"byte_start":215868,"byte_end":215871,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":2532},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":224495,"byte_end":224502,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227566,"byte_end":227575,"line_start":142,"line_end":142,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":2566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227749,"byte_end":227758,"line_start":149,"line_end":149,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":2566},"to":{"krate":2,"index":1958}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":227864,"byte_end":227873,"line_start":157,"line_end":157,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":2566},"to":{"krate":0,"index":872}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":229992,"byte_end":230001,"line_start":232,"line_end":232,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230263,"byte_end":230272,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":1958}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":230381,"byte_end":230390,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":2578},"to":{"krate":0,"index":872}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233636,"byte_end":233640,"line_start":348,"line_end":348,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":233850,"byte_end":233854,"line_start":357,"line_end":357,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":2590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234809,"byte_end":234813,"line_start":388,"line_end":388,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":234895,"byte_end":234899,"line_start":392,"line_end":392,"column_start":29,"column_end":33},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":235022,"byte_end":235026,"line_start":398,"line_end":398,"column_start":26,"column_end":30},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":2424}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,105,110,112,117,116,46,114,115],"byte_start":235255,"byte_end":235259,"line_start":408,"line_end":408,"column_start":27,"column_end":31},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":2480}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":277720,"byte_end":277725,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":2638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":289341,"byte_end":289346,"line_start":367,"line_end":367,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":2648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,97,118,120,50,92,105,109,112,46,114,115],"byte_start":292133,"byte_end":292137,"line_start":448,"line_end":448,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":2658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":309583,"byte_end":309588,"line_start":362,"line_end":362,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":2680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":321208,"byte_end":321213,"line_start":677,"line_end":677,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":2690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,116,101,100,100,121,95,115,115,115,101,51,92,105,109,112,46,114,115],"byte_start":324001,"byte_end":324005,"line_start":758,"line_end":758,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":237496,"byte_end":237511,"line_start":58,"line_end":58,"column_start":6,"column_end":21},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":242643,"byte_end":242650,"line_start":200,"line_end":200,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":2722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":245720,"byte_end":245731,"line_start":280,"line_end":280,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":247446,"byte_end":247459,"line_start":343,"line_end":343,"column_start":6,"column_end":19},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":2732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":251366,"byte_end":251377,"line_start":452,"line_end":452,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,108,105,116,101,114,97,108,92,109,111,100,46,114,115],"byte_start":256684,"byte_end":256700,"line_start":615,"line_end":615,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":327801,"byte_end":327806,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":2768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":328100,"byte_end":328103,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":2762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,105,107,101,118,109,46,114,115],"byte_start":337303,"byte_end":337310,"line_start":358,"line_end":358,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":2778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":341126,"byte_end":341133,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":2798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":344087,"byte_end":344094,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":2798},"to":{"krate":2,"index":1958}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":344235,"byte_end":344242,"line_start":170,"line_end":170,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":2798},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":349149,"byte_end":349153,"line_start":289,"line_end":289,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":2804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":351544,"byte_end":351554,"line_start":371,"line_end":371,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,112,114,111,103,46,114,115],"byte_start":352966,"byte_end":352975,"line_start":418,"line_end":418,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":2884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":354098,"byte_end":354110,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":2894},"to":{"krate":2,"index":2648}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":369273,"byte_end":369278,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":3056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":370688,"byte_end":370693,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":8478}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":370870,"byte_end":370875,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371180,"byte_end":371185,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371269,"byte_end":371274,"line_start":104,"line_end":104,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":3078},"to":{"krate":2,"index":7406}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":371485,"byte_end":371490,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":388006,"byte_end":388011,"line_start":539,"line_end":539,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":392049,"byte_end":392054,"line_start":657,"line_end":657,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":3078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":393566,"byte_end":393573,"line_start":699,"line_end":699,"column_start":27,"column_end":34},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":1556},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394160,"byte_end":394174,"line_start":717,"line_end":717,"column_start":27,"column_end":41},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":1564},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":394749,"byte_end":394754,"line_start":738,"line_end":738,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":395733,"byte_end":395739,"line_start":773,"line_end":773,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":396428,"byte_end":396440,"line_start":798,"line_end":798,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":397868,"byte_end":397884,"line_start":837,"line_end":837,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":399622,"byte_end":399630,"line_start":885,"line_end":885,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402608,"byte_end":402616,"line_start":957,"line_end":957,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":402843,"byte_end":402856,"line_start":965,"line_end":965,"column_start":29,"column_end":42},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":1626},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":404347,"byte_end":404355,"line_start":1010,"line_end":1010,"column_start":27,"column_end":35},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2070}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":404991,"byte_end":404999,"line_start":1031,"line_end":1031,"column_start":33,"column_end":41},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2070}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":405783,"byte_end":405800,"line_start":1054,"line_end":1054,"column_start":27,"column_end":44},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":1650},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":408162,"byte_end":408173,"line_start":1123,"line_end":1123,"column_start":50,"column_end":61},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":3094},"to":{"krate":0,"index":1658}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":408759,"byte_end":408760,"line_start":1145,"line_end":1145,"column_start":25,"column_end":26},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":525},"to":{"krate":0,"index":1658}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,98,121,116,101,115,46,114,115],"byte_start":409415,"byte_end":409423,"line_start":1161,"line_end":1161,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":1658}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":426198,"byte_end":426207,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":3340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":427761,"byte_end":427779,"line_start":69,"line_end":69,"column_start":23,"column_end":41},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":428910,"byte_end":428915,"line_start":99,"line_end":99,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1720},"to":{"krate":0,"index":1716}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431270,"byte_end":431277,"line_start":181,"line_end":181,"column_start":13,"column_end":20},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":1738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":431552,"byte_end":431559,"line_start":193,"line_end":193,"column_start":26,"column_end":33},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":1738},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":432781,"byte_end":432795,"line_start":228,"line_end":228,"column_start":13,"column_end":27},"kind":{"variant":"Impl","fields":[100]},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,116,114,97,105,116,46,114,115],"byte_start":433080,"byte_end":433094,"line_start":240,"line_end":240,"column_start":26,"column_end":40},"kind":{"variant":"Impl","fields":[101]},"from":{"krate":0,"index":1752},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":435222,"byte_end":435227,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[102]},"from":{"krate":0,"index":3350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438326,"byte_end":438331,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[103]},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":8478}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438508,"byte_end":438513,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[104]},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438701,"byte_end":438706,"line_start":154,"line_end":154,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[105]},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":2672}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":438790,"byte_end":438795,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[106]},"from":{"krate":0,"index":3372},"to":{"krate":2,"index":7406}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":439006,"byte_end":439011,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[107]},"from":{"krate":0,"index":3372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":455525,"byte_end":455530,"line_start":595,"line_end":595,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[108]},"from":{"krate":0,"index":3372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":459569,"byte_end":459574,"line_start":714,"line_end":714,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[109]},"from":{"krate":0,"index":3372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":460954,"byte_end":460966,"line_start":754,"line_end":754,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[110]},"from":{"krate":0,"index":1890},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":461565,"byte_end":461570,"line_start":778,"line_end":778,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[111]},"from":{"krate":0,"index":1900},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":462542,"byte_end":462548,"line_start":813,"line_end":813,"column_start":27,"column_end":33},"kind":{"variant":"Impl","fields":[112]},"from":{"krate":0,"index":1908},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":464041,"byte_end":464057,"line_start":856,"line_end":856,"column_start":6,"column_end":22},"kind":{"variant":"Impl","fields":[113]},"from":{"krate":0,"index":3378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":465784,"byte_end":465792,"line_start":904,"line_end":904,"column_start":10,"column_end":18},"kind":{"variant":"Impl","fields":[114]},"from":{"krate":0,"index":1926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468730,"byte_end":468738,"line_start":976,"line_end":976,"column_start":25,"column_end":33},"kind":{"variant":"Impl","fields":[115]},"from":{"krate":0,"index":1926},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":468965,"byte_end":468978,"line_start":984,"line_end":984,"column_start":29,"column_end":42},"kind":{"variant":"Impl","fields":[116]},"from":{"krate":0,"index":1944},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":470025,"byte_end":470033,"line_start":1014,"line_end":1014,"column_start":27,"column_end":35},"kind":{"variant":"Impl","fields":[117]},"from":{"krate":0,"index":1926},"to":{"krate":2,"index":2070}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":470665,"byte_end":470673,"line_start":1035,"line_end":1035,"column_start":33,"column_end":41},"kind":{"variant":"Impl","fields":[118]},"from":{"krate":0,"index":1926},"to":{"krate":2,"index":2070}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":471453,"byte_end":471470,"line_start":1058,"line_end":1058,"column_start":27,"column_end":44},"kind":{"variant":"Impl","fields":[119]},"from":{"krate":0,"index":1962},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":472076,"byte_end":472090,"line_start":1076,"line_end":1076,"column_start":27,"column_end":41},"kind":{"variant":"Impl","fields":[120]},"from":{"krate":0,"index":1970},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":472761,"byte_end":472768,"line_start":1097,"line_end":1097,"column_start":27,"column_end":34},"kind":{"variant":"Impl","fields":[121]},"from":{"krate":0,"index":1978},"to":{"krate":2,"index":4340}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":475102,"byte_end":475113,"line_start":1165,"line_end":1165,"column_start":50,"column_end":61},"kind":{"variant":"Impl","fields":[122]},"from":{"krate":0,"index":3388},"to":{"krate":0,"index":1986}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":475693,"byte_end":475694,"line_start":1187,"line_end":1187,"column_start":25,"column_end":26},"kind":{"variant":"Impl","fields":[123]},"from":{"krate":0,"index":771},"to":{"krate":0,"index":1986}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":476327,"byte_end":476335,"line_start":1203,"line_end":1203,"column_start":23,"column_end":31},"kind":{"variant":"Impl","fields":[124]},"from":{"krate":0,"index":2010},"to":{"krate":0,"index":1986}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":477531,"byte_end":477540,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[125]},"from":{"krate":0,"index":3394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,115,112,97,114,115,101,46,114,115],"byte_start":478336,"byte_end":478345,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[126]},"from":{"krate":0,"index":3394},"to":{"krate":2,"index":1958}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":478847,"byte_end":478864,"line_start":9,"line_end":9,"column_start":6,"column_end":23},"kind":{"variant":"Impl","fields":[127]},"from":{"krate":0,"index":3404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":480563,"byte_end":480568,"line_start":64,"line_end":64,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[128]},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,97,118,120,50,46,114,115],"byte_start":484351,"byte_end":484356,"line_start":182,"line_end":182,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[129]},"from":{"krate":0,"index":3416},"to":{"krate":2,"index":8474}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":484994,"byte_end":485012,"line_start":17,"line_end":17,"column_start":6,"column_end":24},"kind":{"variant":"Impl","fields":[130]},"from":{"krate":0,"index":3424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":487332,"byte_end":487337,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[131]},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,101,103,101,120,45,49,46,49,46,55,92,115,114,99,92,118,101,99,116,111,114,92,115,115,115,101,51,46,114,115],"byte_start":490111,"byte_end":490116,"line_start":187,"line_end":187,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[132]},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":8474}}]}
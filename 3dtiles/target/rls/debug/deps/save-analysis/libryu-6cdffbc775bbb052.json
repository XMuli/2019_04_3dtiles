{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56],"program":"C:\\Users\\yuanyi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ryu","C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=6cdffbc775bbb052","-C","extra-filename=-6cdffbc775bbb052","--out-dir","d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps","-L","dependency=d:\\programming\\DataDas\\3dtiles\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","integer128","--cfg","must_use_return","--error-format=json","--sysroot","C:\\Users\\yuanyi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[100,58,92,112,114,111,103,114,97,109,109,105,110,103,92,68,97,116,97,68,97,115,92,51,100,116,105,108,101,115,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,114,121,117,45,54,99,100,102,102,98,99,55,55,53,98,98,98,48,53,50,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"ryu","disambiguator":[14167510617603692738,7339930788567455491]},"crate_root":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src","external_crates":[{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[18058147969333450893,13268649681863949094]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11952756852394341397,15947907305756316424]}},{"file_name":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3630013859029208871,3806232699279168156]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":4306,"line_start":1,"line_end":126,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4004,"byte_end":4010,"line_start":118,"line_end":118,"column_start":18,"column_end":24},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4012,"byte_end":4017,"line_start":118,"line_end":118,"column_start":26,"column_end":31},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4134,"byte_end":4148,"line_start":122,"line_end":122,"column_start":18,"column_end":32},"alias_span":null,"name":"d2s_buffered_n","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4167,"byte_end":4181,"line_start":123,"line_end":123,"column_start":18,"column_end":32},"alias_span":null,"name":"f2s_buffered_n","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4203,"byte_end":4217,"line_start":124,"line_end":124,"column_start":21,"column_end":35},"alias_span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4221,"byte_end":4242,"line_start":124,"line_end":124,"column_start":39,"column_end":60},"name":"pretty_d2s_buffered_n","value":"","parent":{"krate":0,"index":224}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4264,"byte_end":4278,"line_start":125,"line_end":125,"column_start":21,"column_end":35},"alias_span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4282,"byte_end":4303,"line_start":125,"line_end":125,"column_start":39,"column_end":60},"name":"pretty_f2s_buffered_n","value":"","parent":{"krate":0,"index":224}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":4306,"line_start":1,"line_end":126,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":48},{"krate":0,"index":60},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":174},{"krate":0,"index":218},{"krate":0,"index":224}],"decl_id":null,"docs":" Pure Rust implementation of RyÅ«, an algorithm to quickly convert floating\n point numbers to decimal strings.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3397,"byte_end":3407,"line_start":89,"line_end":89,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4664,"byte_end":4670,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4653,"byte_end":4695,"line_start":18,"line_end":20,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4889,"byte_end":4892,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4820,"byte_end":4829,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":5888,"byte_end":5894,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"fn <F> (&mut self, f: F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":5819,"byte_end":5828,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":6541,"byte_end":6546,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":6613,"byte_end":6632,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Float::write_to_ryu_buffer","value":"fn (self, result: *mut u8) -> usize","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":7089,"byte_end":7095,"line_start":95,"line_end":95,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,100,50,115,46,114,115],"byte_start":28142,"byte_end":28156,"line_start":563,"line_end":563,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::d2s::d2s_buffered_n","value":"fn (f: f64, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written. RyÅ«'s\n original formatting.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,100,50,115,46,114,115],"byte_start":28073,"byte_end":28081,"line_start":561,"line_end":561,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,102,50,115,46,114,115],"byte_start":76978,"byte_end":76992,"line_start":475,"line_end":475,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::f2s::f2s_buffered_n","value":"fn (f: f32, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written. RyÅ«'s\n original formatting.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,102,50,115,46,114,115],"byte_start":76909,"byte_end":76917,"line_start":473,"line_end":473,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,112,114,101,116,116,121,92,109,111,100,46,114,115],"byte_start":79383,"byte_end":79397,"line_start":53,"line_end":53,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::pretty::d2s_buffered_n","value":"fn (f: f64, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written. Human\n readable formatting.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,112,114,101,116,116,121,92,109,111,100,46,114,115],"byte_start":79314,"byte_end":79322,"line_start":51,"line_end":51,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":216},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,112,114,101,116,116,121,92,109,111,100,46,114,115],"byte_start":83271,"byte_end":83285,"line_start":158,"line_end":158,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::pretty::f2s_buffered_n","value":"fn (f: f32, result: *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written. Human\n readable formatting.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,112,114,101,116,116,121,92,109,111,100,46,114,115],"byte_start":83202,"byte_end":83210,"line_start":156,"line_end":156,"column_start":29,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4111,"byte_end":4114,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\yuanyi\\.cargo\\registry\\src\\mirrors.ustc.edu.cn-b63e9dae659fc205\\ryu-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"decl_id":null,"docs":" Unsafe functions that exactly mirror the API of the C implementation of RyÅ«.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4702,"byte_end":4708,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":6208,"byte_end":6214,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":4702,"byte_end":4708,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":6208,"byte_end":6214,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2648}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,121,117,97,110,121,105,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,109,105,114,114,111,114,115,46,117,115,116,99,46,101,100,117,46,99,110,45,98,54,51,101,57,100,97,101,54,53,57,102,99,50,48,53,92,114,121,117,45,48,46,50,46,56,92,115,114,99,92,98,117,102,102,101,114,92,109,111,100,46,114,115],"byte_start":6548,"byte_end":6554,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":30}}]}